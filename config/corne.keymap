/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define MEDIA_ESC &lt MEDIA ESC
#define MOUSE_TAB &lt MOUSE TAB
#define NUMBER_SPACE &lt NUMBER SPACE
#define SYMBOL_RGUI &lt SYMBOL RGUI
#define FUNCTION_RALT &lt FUNCTION RALT

/ {
    combos {
        compatible = "zmk,combos";D
        combos-escape { bindings = <&kp ESCAPE>; key-positions = <1 0>; layers = <0>; };
        combos-delete { bindings = <&kp DELETE>; key-positions = <10 11>; layers = <0>; };
        combos-enter { bindings = <&kp ENTER>; key-positions = <22 23>; layers = <0>; };S
        combos-super { bindings = <&kp LMETA>; key-positions = <24 25>; layers = <0>; };
        combos-btclr { bindings = <&bt BT_CLR>; key-positions = <36 37 38 39 40 41>; };
        combos-F1c { bindings = <&kp F1>; key-positions = <0 12>; layers = <0>; };
        combos-F2c { bindings = <&kp F2>; key-positions = <1 13>; layers = <0>; };
        combos-F3c { bindings = <&kp F3>; key-positions = <2 14>; layers = <0>; };
        combos-F4c { bindings = <&kp F4>; key-positions = <3 15>; layers = <0>; };
        combos-F5c { bindings = <&kp F5>; key-positions = <4 16>; layers = <0>; };
        combos-F6c { bindings = <&kp F6>; key-positions = <5 17>; layers = <0>; };
        combos-F7c { bindings = <&kp F7>; key-positions = <6 18>; layers = <0>; };
        combos-F8c { bindings = <&kp F8>; key-positions = <7 19>; layers = <0>; };
        combos-F9c { bindings = <&kp F9>; key-positions = <8 20>; layers = <0>; };
        combos-F10c { bindings = <&kp F10>; key-positions = <9 21>; layers = <0>; };
        combos-F11c { bindings = <&kp F11>; key-positions = <10 22>; layers = <0>; };
        combos-F12c { bindings = <&kp F12>; key-positions = <11 23>; layers = <0>; };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
         bindings = <
            MEDIA_ESC   DE_Q   DE_W   DE_E   DE_R      DE_T                            DE_Z        DE_U  DE_I         DE_O     DE_P     DE_BSPC
            MOUSE_TAB   DE_A   DE_S   DE_D   DE_F      DE_G                            DE_H        DE_J  DE_K         DE_L     DE_UP    DE_RET
            DE_LSHFT    DE_Y   DE_X   DE_C   DE_V      DE_B                            DE_N        DE_M  LSHFT_COMMA  DE_LEFT  DE_DOWN  DE_RIGHT
                                             DE_LCTRL  DE_LGUI  DE_RALT  NUMBER_SPACE  SYMBOL_RGUI  FUNCTION_RALT
            >;
        };

        lower_layer {
            bindings = <
  &kp TAB     &kp F1   &kp F2    &kp F3        &kp F4        &kp F5        &kp PAGE_UP  &kp UP     &kp PAGE_DOWN  &kp N7  &kp N8  &kp N9
  &kp LSHFT   &kp F6   &kp F7    &kp F8        &kp F9        &kp F10       &kp LEFT     &kp DOWN   &kp RIGHT      &kp N4  &kp N5  &kp N6
  &kp LCTRL   &kp F11  &kp F12   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp HOME     &kp END    &kp N0         &kp N1  &kp N2  &kp N3
                                 &kp LGUI        &trans     &kp SPACE        &kp RET    &trans       &kp RALT
            >;
        };

        raise_layer {
            bindings = <
  &kp TAB      &kp EXCL  &kp AT    &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET   &kp AMPS    &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp DELETE
  &kp LSHFT    &trans    &trans    &trans    &trans     &trans       &kp MINUS   &kp EQUAL   &kp LBKT         &kp RBKT  &kp BSLH   &kp GRAVE
  &kp LCTRL    &trans    &trans    &trans    &trans     &trans       &kp UNDER   &kp PLUS    &kp LBRC         &kp RBRC  &kp PIPE   &kp TILDE
                             &kp LGUI    &trans  &kp SPACE      &kp RET     &trans         &kp RALT
            >;
        };
    };
};
