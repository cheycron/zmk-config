/*
  ╭────────────────────────╮ ╭────────────────────────╮
  │ 0   1   2   3   4   5  │ │ 6   7   8   9   10  11 │
  │ 12  13  14  15  16  17 │ │ 18  19  19  20  22  23 │
  │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
              ╰────────────╯ ╰────────────╯
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

// Behavior configuration
&mt { tapping-term-ms = <200>; quick_tap_ms = <0>; flavor = "tap-preferred"; };
&lt { tapping-term-ms = <200>; quick_tap_ms = <0>; flavor = "tap-preferred"; };
&sk { release-after-ms = <500>; quick-release; };

/ {

    behaviors {
    };

    combos {
        compatible = "zmk,combos";
        combos_delete { bindings = <&kp DELETE>; key-positions = <10 11>; layers = <0>; };
        combos_enter { bindings = <&kp ENTER>; key-positions = <22 23>; layers = <0>; };
        combos_insert { bindings = <&kp  INSERT>; key-positions = <34 35>; layers = <0>; };
        combos_caps { bindings = <&kp CAPS>; key-positions = <24 25>; layers = <0>; };
        combos_alt { bindings = <&kp LEFT_ALT>; key-positions = <36 37>; };
        combos_btclr { bindings = <&bt BT_CLR>; key-positions = <37 38 39 40>; };
        combos_cut { bindings = <&kp K_CUT>; key-positions = <25 26>; };
        combos_copy { bindings = <&kp K_COPY>; key-positions = <26 27>; };
        combos_paste { bindings = <&kp K_PASTE>; key-positions = <27 28>; };
        combos_undo { bindings = <&kp K_UNDO>; key-positions = <0 1 2>; };
        combos_redo { bindings = <&kp K_REDO>; key-positions = <9 10 11>; };
    };


    keymap {
        compatible = "zmk,keymap";
        default_layer {
            label = "Home";
            bindings = <
  &lt 3 ESC    &kp Q  &kp W      &kp E     &kp R      &kp T          &kp Y  &kp U      &kp I      &kp O     &kp P       &kp BSPC
  &kp TAB      &kp A  &kp S      &kp D     &kp F      &kp G          &kp H  &kp J      &kp K      &kp L     &kp SEMI    &kp SQT
  &kp LSHFT    &kp Z  &kp X      &kp C     &kp V      &kp B          &kp N  &kp M      &kp COMMA  &kp DOT   &kp FSLH    &kp RSHIFT
                           &kp LCTRL  &kp LWIN  &kp SPACE          &lt 1 SPACE  &mo 2   &kp RALT
            >;
        };
       lower_layer {
            label = "Function";
            bindings = <
  &kp ESC    &kp F1   &kp F2        &kp F3        &kp F4        &kp F5         &kp PAGE_UP  &kp UP      &kp PAGE_DOWN   &kp N7  &kp N8  &kp N9
  &kp TAB    &kp F6   &kp F7        &kp F8        &kp F9        &kp F10        &kp LEFT     &kp DOWN    &kp RIGHT       &kp N4  &kp N5  &kp N6
  &kp LSHFT  &kp F11  &kp F12       &none         &none         &none          &kp HOME     &kp END     &kp N0          &kp N1  &kp N2  &kp N3
                                    &kp LCTRL     &kp LWIN      &kp SPACE      &trans       &trans       &kp RALT
            >;
        };
        raise_layer {
            label = "Extend";
            bindings = <
  &kp ESC     &kp EXCL       &kp AT             &kp HASH  &kp DLLR   &kp PRCNT   &kp CARET   &kp AMPS    &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DELETE
  &kp TAB     &kp LPAR       &kp RPAR           &kp LBKT  &kp RBKT   &none       &kp MINUS   &kp EQUAL   &kp LBKT         &kp RBKT  &kp BSLH   &kp GRAVE
  &kp LSHFT   &kp LESS_THAN  &kp GREATER_THAN   &kp LBRC  &kp RBRC   &none       &kp UNDER   &kp PLUS    &kp LBRC         &kp RBRC  &kp PIPE   &kp TILDE
                             &kp LCTRL          &kp LWIN  &kp SPACE  &trans      &trans      &kp RALT
            >;
        };
        bluetooth_layer {
            label = "Bluetooth";
            bindings = <
  &none  &none   &none  &none   &none     &none         &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4 &bt BT_SEL 5 &bt BT_SEL 6
  &none  &none   &none  &none   &none     &none         &none        &none        &none         &none        &none        &none
  &none  &none   &none  &none   &none     &none         &none        &none        &none         &none        &none        &none
                        &none   &none     &none         &none        &none        &none
            >;
        };
        test_layer {
            label = "Testing";
            bindings = <
  &kp F1     &kp F2     &kp F3     &kp F4        &kp F5        &kp F6         &kp F7     &kp F8         &kp F9              &kp F10  &kp F11  &kp F12
  &kp N1     &kp N2     &kp N3     &kp N4        &kp N5        &kp N6         &kp N7     &kp N8         &kp N9              &kp N0   &kp MINUS   &kp PLUS
  &kp LSHFT  &kp LPAR   &kp RPAR   &kp LBKT      &kp RBKT      &kp LBRC       &kp RBRC   &kp LESS_THAN  &kp GREATER_THAN    &trans   &trans   &kp RSHIFT
                                 &kp LCTRL     &kp LWIN      &kp SPACE      &trans     &trans     &kp RALT
            >;
        };
    };
};
