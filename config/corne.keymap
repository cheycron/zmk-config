#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
/ {
    combos {
        compatible = "zmk,combos";
        combos_delete { bindings = <&kp DELETE>; key-positions = <10 11>; layers = <0>; };
        combos_enter { bindings = <&kp ENTER>; key-positions = <22 23>; layers = <0>; };
        combos_enter { bindings = <&kp  INSERT>; key-positions = <34 35>; layers = <0>; };
        combos_super { bindings = <&kp CAPS>; key-positions = <24 25>; layers = <0>; };
        combos_alt { bindings = <&kp LEFT_ALT>; key-positions = <36 37>; };
        combos_F1 { bindings = <&kp F1>; key-positions = <0 12>; layers = <0>; };
        combos_F2 { bindings = <&kp F2>; key-positions = <1 13>; layers = <0>; };
        combos_F3 { bindings = <&kp F3>; key-positions = <2 14>; layers = <0>; };
        combos_F4 { bindings = <&kp F4>; key-positions = <3 15>; layers = <0>; };
        combos_F5 { bindings = <&kp F5>; key-positions = <4 16>; layers = <0>; };
        combos_F6 { bindings = <&kp F6>; key-positions = <5 17>; layers = <0>; };
        combos_F7 { bindings = <&kp F7>; key-positions = <6 18>; layers = <0>; };
        combos_F8 { bindings = <&kp F8>; key-positions = <7 19>; layers = <0>; };
        combos_F9 { bindings = <&kp F9>; key-positions = <8 20>; layers = <0>; };
        combos_F10 { bindings = <&kp F10>; key-positions = <9 21>; layers = <0>; };
        combos_F11 { bindings = <&kp F11>; key-positions = <10 22>; layers = <0>; };
        combos_F12 { bindings = <&kp F12>; key-positions = <11 23>; layers = <0>; };
        combos_btclr { bindings = <&bt BT_CLR>; key-positions = <37 38 39 40>; };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
  &kp ESC    &kp Q  &kp W      &kp E     &kp R      &kp T          &kp Y  &kp U      &kp I    &kp O     &kp P    &kp BSPC
  &kp TAB    &kp A  &kp S      &kp D     &kp F      &kp G          &kp H  &kp J      &kp K    &kp L  &kp SEMI     &kp SQT
  &kp LSHFT  &kp Z  &kp X      &kp C     &kp V      &kp B          &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                         &kp LCTRL  &kp LWIN  &kp SPACE    &lt 1 SPACE  &mo 2   &kp RALT
            >;
        };
        lower_layer {
            bindings = <
  &kp ESC    &kp F1   &kp F2        &kp F3        &kp F4        &kp F5        &kp PAGE_UP  &kp UP  &kp PAGE_DOWN  &kp N7  &kp N8  &kp N9
  &kp TAB    &kp F6   &kp F7        &kp F8        &kp F9       &kp F10        &kp LEFT     &kp DOWN      &kp RIGHT  &kp N4  &kp N5  &kp N6
  &kp LSHFT  &kp F11  &kp F12  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &kp HOME     &kp END         &kp N0  &kp N1  &kp N2  &kp N3
                                &kp LCTRL      &kp LWIN     &kp SPACE         &trans       &trans       &kp RALT
            >;
        };
        raise_layer {
            bindings = <
  &kp ESC     &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DELETE
  &kp TAB     &trans  &trans     &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH   &kp GRAVE
  &kp LSHFT   &trans  &trans     &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE   &kp TILDE
                             &kp LCTRL  &kp LWIN  &kp SPACE       &trans     &trans         &kp RALT
            >;
        };
    };
};
